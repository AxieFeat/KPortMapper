name: Build and Release Compose Desktop App

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            gradle_task: packageDeb
            artifact_ext: .deb
            artifact_name: PortMapper-Linux.deb
          - os: windows-latest
            gradle_task: packageMsi
            artifact_ext: .msi
            artifact_name: PortMapper-Windows.msi
          - os: macos-latest
            gradle_task: packageDmg
            artifact_ext: .dmg
            artifact_name: PortMapper-macOS.dmg

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Grant execute permission for Gradle wrapper
        if: runner.os != 'Windows'
        run: chmod +x ./gradlew

      - name: Build installer
        run: ./gradlew ${{ matrix.gradle_task }}

      - name: Locate artifact
        id: artifact
        shell: bash
        run: |
          artifact_path=$(find build/compose/binaries -type f -name "*${{ matrix.artifact_ext }}" | head -n 1)
          cp "$artifact_path" "${{ matrix.artifact_name }}"
          echo "artifact_path=${{ matrix.artifact_name }}" >> $GITHUB_OUTPUT
          echo "artifact_name=${{ matrix.artifact_name }}" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.artifact.outputs.artifact_name }}
          path: ${{ steps.artifact.outputs.artifact_path }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List downloaded artifacts
        run: ls -R artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: PortMapper ${{ github.ref_name }}
          body: |
            Multi-platform release for PortMapper version ${{ github.ref_name }}
            Contains installers for Windows, macOS and Linux
          files: |
            artifacts/PortMapper-Windows.msi
            artifacts/PortMapper-Linux.deb
            artifacts/PortMapper-macOS.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
