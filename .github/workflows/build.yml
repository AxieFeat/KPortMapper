name: Build and Release Compose Desktop App

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_pattern: '*.deb'
            search_path: 'build/compose/binaries/main/deb'
          - os: windows-latest
            artifact_pattern: '*.msi'
            search_path: 'build/compose/binaries/main/msi'
          - os: macos-latest
            artifact_pattern: '*.dmg'
            search_path: 'build/compose/binaries/main/dmg'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Grant execute permission for Gradle wrapper (Linux/macOS)
        if: runner.os != 'Windows'
        run: chmod +x ./gradlew

      - name: Build native distribution
        run: ./gradlew createDistributable

      - name: Find artifacts
        id: find-artifacts
        run: |
          artifact_path=$(find "${{ matrix.search_path }}" -type f -name "${{ matrix.artifact_pattern }}" | head -n 1)
          if [ -z "$artifact_path" ]; then
            echo "::error::No artifact found for pattern ${{ matrix.artifact_pattern }} in ${{ matrix.search_path }}"
            exit 1
          fi
          echo "artifact_path=$artifact_path" >> $GITHUB_OUTPUT
          echo "artifact_name=$(basename "$artifact_path")" >> $GITHUB_OUTPUT

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: PortMapper ${{ github.ref_name }}
          body: |
            Auto-generated release for PortMapper version ${{ github.ref_name }}
            Built for ${{ matrix.os }}
          files: ${{ steps.find-artifacts.outputs.artifact_path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}